#*****************************************************************************
# Partners:         Simone
# Lab:              4
# Description:      A fun game where you try to find a rat and recieve points
#                   based on finding or not finding the rat.
# Notes:            I created a lot of additonal stylistic functions to
#                   add style. I used chatgpt to help with debugging.
#                   And to understand the structure of loops better.
#                   I worked solo because of the structure of my group.
#*****************************************************************************
import random


def main():
    """
    Main function to run the game loop.
    Param: None
    :Return: None
    """
    print_intro_ascii()
    print_tilde_row()
    print_intro()
    print_tilde_row()
    score = 0
    while -5 < score < 10:
        print_empty_holes()
        choice = get_choice()
        print_tilde_row()
        result, correct_hole = calc_choice(choice)
        print_rat(correct_hole)
        score = calc_score(score, result, correct_hole)
        if score >= 10:
           print_win()
           break
        elif score <= -5:
           print_lose()
           break
    

def calc_score(score, result, correct_hole):
  """
  Updates and prints the score based on the result of their choice.
  Param: score - the current score.
         result - the result of the player's choice.
         correct_hole - the correct hole where the rat was.
  :Return: updated score
  """
  print_tilde_row()
  if result == "correct":
      score += 5
      print(f"Correct! +5 points. Your score: {score}".center(69))
  else:
      score -= 3
      print(f"Incorrect! -3 points. Your score: {score}".center(69))
  print_tilde_row()
  return score


def print_intro_ascii():
    """
    Prints ascii introduction.
    Param: None
    :Return: None
    """
    print(r'''
  ____  ____  _  _  ____     ____  _   _  ____    ____    __   ____ 
 ( ___)(_  _)( \( )(  _ \   (_  _)( )_( )( ___)  (  _ \  /__\ (_  _)
  )__)  _)(_  )  (  )(_) )    )(   ) _ (  )__)    )   / /(__)\  )(  
 (__)  (____)(_)\_)(____/    (__) (_) (_)(____)  (_)\_)(__)(__)(__) 
    ''')


def print_tilde_row():
    """
    Prints row of tildes.
    Param: None
    :Return: None
    """
    print("˜" * 69)


def print_intro():
    """
    Prints the introductory message.
    Param: None
    :Return: None
    """
    print("Welcome to Find the Rat!".center(69))
    print("Try and guess which hole the Rat is hiding in!".center(69))
    print("Correct = 5 points | Incorrect = -3 points".center(69))
    print("Score 10 to win, but -5 means you lose... Good luck!".center(69))


def get_choice():
   """
   Main function to run the game loop.
   Param: None
   :Return:int: The user's choice of hole (1-3).
   """
   print_tilde_row()
   choice = int(input("                         Choose a hole (1-3): "))
   return choice


def calc_choice(player_choice):
    """
    Calculates if the player's choice is correct.
    Params: player_choice (int): The player's chosen hole.
    :Returns: tuple[str, int]: 'correct' or 'incorrect', and hole num.
    """
    correct_hole = random.randint(1, 3)
    return ("correct" if player_choice == correct_hole else "incorrect", 
            correct_hole)


def print_rat(num):
    """
    Prints  ASCII of the rat based on the hole number.
    Params: num (int): The hole number where the rat is located.
    :Returns: None
    """
    if num == 1:
                    print (r'''
                          ()-()   
                           \"/  
                          ( ` ) (   ) (   )  ''')
    if num == 2:
                    print (r'''
                                ()-()   
                                 \"/  
                          (   ) ( ` ) (   )  ''')
    if num == 3:
                    print (r'''
                                      ()-()   
                                       \"/  
                          (   ) (   ) ( ` )  ''')


def print_empty_holes():
    """
    Prints the empty hole ASCII
    Param: None
    :Return: None
    """
    print(r'''

                          (   ) (   ) (   )  ''')


def print_win():
    """
    Prints the Win message and ASCII.
    Param: None
    :Return: None
    """
    print(r'''
               You Caught the rat!
          |▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔|
          |     ()-().----.       .   |
          |      \"/` ___  ;_____.'   |
          |       ` ^^   ^^           |
           ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
    ''')


def print_lose():
    """
    Prints the Lose message.
    Param: None
    :Return: None
    """
    print(r'''
            Too slow... The rat's big brother showed up...

                   __             _,-"~^"-.
                 _// )      _,-"~`         `.
               ." ( /`"-,-"`                 ;
              / /0                            ;
             /           ,             ,-"     ;
            (,__.--.      \           /        ;
             //'   /`-.\   |          |        `._________
               _.-'_/`  )  )--...,,,___\     \-----------, )
             ((("~` _.-'.-'           __`-.   )         / /
               o   ((("`             (((---~"`         / /
              /0\                                     ( (________
              / \                                      `----""""-'
    ''')


if __name__ == '__main__':
    main()
